<UserControl x:Class="LinePress.Options.OptionsPageControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" Width="393"
             Height="420" mc:Ignorable="d">

	<UserControl.Resources>

		<!--  ! Dim TextBlock when disabled  -->
		<Style x:Key="DisabledTextBlock" TargetType="TextBlock">
			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground" Value="Gray" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--  ! Animated Toggle Switch Style  -->
		<Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
			<Setter Property="Foreground" Value="Black" />
			<Setter Property="Background" Value="#FAFAFB" />
			<Setter Property="BorderBrush" Value="#EAEAEB" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Viewbox Stretch="Uniform">
							<Canvas Name="Layer_1" Canvas.Left="10" Canvas.Top="0"
							        Width="20" Height="20">
								<Ellipse Canvas.Left="0" Width="20" Height="20"
								         Fill="{TemplateBinding Background}"
								         Stroke="{TemplateBinding BorderBrush}"
								         StrokeThickness="0.5" />
								<Ellipse Canvas.Left="15" Width="20" Height="20"
								         Fill="{TemplateBinding Background}"
								         Stroke="{TemplateBinding BorderBrush}"
								         StrokeThickness="0.5" />
								<Border Name="rect416927" Canvas.Left="10" Width="15"
								        Height="20"
								        Background="{TemplateBinding Background}"
								        BorderBrush="{TemplateBinding BorderBrush}"
								        BorderThickness="0,0.5,0,0.5" />
								<Ellipse x:Name="ellipse" Canvas.Left="0" Width="20"
								         Height="20" Fill="White"
								         Stroke="{TemplateBinding BorderBrush}"
								         StrokeThickness="0.3">
									<Ellipse.RenderTransform>
										<TranslateTransform X="0" Y="0" />
									</Ellipse.RenderTransform>
									<Ellipse.BitmapEffect>
										<DropShadowBitmapEffect Direction="270" ShadowDepth="0.7" Softness="0.1"
										                        Color="#BBBBBB" />
									</Ellipse.BitmapEffect>
								</Ellipse>
							</Canvas>
						</Viewbox>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="False">
								<Trigger.Setters>
									<Setter Property="Background" Value="#f94939" />
								</Trigger.Setters>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation Storyboard.TargetProperty="Background.Color" To="#52D468" Duration="0:0:0.2" />
											<ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)">
												<SplineDoubleKeyFrame KeyTime="0" Value="0" />
												<SplineDoubleKeyFrame KeySpline="0, 1, 0.6, 1" KeyTime="0:0:0.4" Value="15" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation Storyboard.TargetProperty="Background.Color" To="#f94939" Duration="0:0:0.2" />
											<ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#f94939" Duration="0:0:0.2" />
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)">
												<SplineDoubleKeyFrame KeyTime="0" Value="15" />
												<SplineDoubleKeyFrame KeySpline="0, 0.5, 0.5, 1" KeyTime="0:0:0.3" Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--  ! Transparent Button Style  -->
		<Style x:Key="TransparentButton" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Background" Value="Transparent" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter x:Name="MyContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"
							                  Content="{TemplateBinding Content}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--  ! Add Token Button Style  -->
		<Style x:Key="AddButton" BasedOn="{StaticResource TransparentButton}" TargetType="Button">
			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="True">
					<Setter Property="Foreground" Value="Green" />
				</Trigger>

				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="Foreground" Value="Gray" />
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Foreground" Value="Black" />
				</Trigger>

				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="#FFE7E7E7" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--  ! Remove Token Button Style  -->
		<Style x:Key="RemoveButton" BasedOn="{StaticResource TransparentButton}" TargetType="Button">
			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="True">
					<Setter Property="Foreground" Value="Red" />
				</Trigger>

				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="Foreground" Value="Gray" />
				</Trigger>

				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Foreground" Value="Black" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--  ! Icon of the Add Token Button  -->
		<Viewbox x:Key="AddButtonIcon">
			<Grid>
				<Grid Width="30" Height="25" Visibility="Visible">
					<Rectangle Name="Rect" Visibility="Visible" />
				</Grid>
				<Path Width="23" Height="23" Margin="0,0,0,0"
				      Data="M12.126984,0L19.872009,0 19.872009,12.128 32,12.128 32,19.872999 19.872009,19.872999 19.872009,31.999 12.126984,31.999 12.126984,19.872999 0,19.872999 0,12.128 12.126984,12.128z"
				      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
				      RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
					<Path.RenderTransform>
						<TransformGroup>
							<TransformGroup.Children>
								<RotateTransform Angle="0" />
								<ScaleTransform ScaleX=".6" ScaleY=".6" />
							</TransformGroup.Children>
						</TransformGroup>
					</Path.RenderTransform>
				</Path>
			</Grid>
		</Viewbox>

		<!--  ! Icon of the Remove Token Button  -->
		<Viewbox x:Key="RemoveButtonIcon" />

		<!--  ! Token List Item DataTemplate  -->
		<DataTemplate x:Key="TokenListItemTemplate">
			<Border Margin="0,2">
				<StackPanel>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="30" />
						</Grid.ColumnDefinitions>

						<TextBlock x:Name="TokenField" Grid.Column="0" Padding="8,0,0,0"
						           FontSize="16" FontWeight="SemiBold"
						           Text="{Binding}" />

						<Button Grid.Column="1" Height="25"
						        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.DeleteTokenCommand}"
						        CommandParameter="{Binding ElementName=TokenField, Path=Text}"
						        Cursor="Hand"
						        Style="{StaticResource RemoveButton}">

							<Button.Content>
								<Grid>
									<Grid Width="30" Height="25" Visibility="Collapsed" />
									<Path Width="23" Height="23" Data="M5.1163335,0C6.4203386,-9.1704351E-08,7.7243743,0.4009941,8.7273803,1.4039678L16.150495,8.1248624 23.27359,1.704927C25.27963,-0.10003502 28.489671,-0.10003502 30.495712,1.704927 32.502731,3.5109269 32.502731,6.4198744 30.495712,8.2258736L23.373596,14.745721 30.094705,20.864637C32.100749,22.670576 32.100749,25.579523 30.094705,27.385523 28.088663,29.190485 24.878623,29.190485 22.871604,27.385523L16.150495,21.26563 9.1293941,27.585531C7.122345,29.39147 3.9123056,29.39147 1.9062939,27.585531 -0.099748187,25.780569 -0.099748187,22.870584 1.9062939,21.065622L8.9283719,14.745721 1.5052868,7.9248535C-0.50176227,6.1188537 -0.50176227,3.2099065 1.5052868,1.4039678 2.5082927,0.50200556 3.8122978,-9.1704351E-08 5.1163335,0z"
									      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
									      RenderTransformOrigin="0.5,0.5" Stretch="Fill">
										<Path.RenderTransform>
											<TransformGroup>
												<TransformGroup.Children>
													<RotateTransform Angle="5" />
													<ScaleTransform ScaleX=".6" ScaleY=".6" />
												</TransformGroup.Children>
											</TransformGroup>
										</Path.RenderTransform>
									</Path>
								</Grid>
							</Button.Content>
						</Button>

					</Grid>
					<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
				</StackPanel>
			</Border>
		</DataTemplate>

	</UserControl.Resources>

	<ScrollViewer VerticalScrollBarVisibility="Auto">
		<Grid Margin="10,20,0,0">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<StackPanel>

				<!--  ! Line Spacing  -->
				<GroupBox Grid.Row="0" Width="370" Padding="5,5,0,0"
				          HorizontalAlignment="Left" BorderThickness="1.5" Header="Default Line Spacing">

					<StackPanel Grid.Row="0" Margin="0,5,0,0">
						<StackPanel Margin="20,10" Orientation="Horizontal">
							<RadioButton GroupName="Units" Content="pixel  " IsChecked="{Binding PixelSpacingUsed}" />
							<RadioButton GroupName="Units" Content="em " IsChecked="{Binding EmSpacingUsed}" />
						</StackPanel>

						<!--  ! Amount of Line Spacing  -->
						<StackPanel Margin="20,10" Orientation="Horizontal">
							<Slider x:Name="LineSpacingAmountSlider" Width="240" Height="30"
							        IsSnapToTickEnabled="True" Maximum="{Binding SpacingMaxValue, Mode=OneWay}" Minimum="0"
							        TickFrequency="{Binding SpacingTickValue, Mode=OneWay}" TickPlacement="Both"
							        Value="{Binding LineSpacing, Mode=TwoWay}" />

							<TextBlock Padding="5,2" VerticalAlignment="Center"
							           Style="{StaticResource DisabledTextBlock}"
							           TextAlignment="Center">

								<Run Text="{Binding Value, ElementName=LineSpacingAmountSlider}" />
								<Run Text="{Binding SpacingUnitLabel, Mode=OneWay}" />
							</TextBlock>

						</StackPanel>
						<CheckBox IsChecked="{Binding ApplySpacingToComments, Mode=TwoWay}" Content="Apply spacing to comments"/>
					</StackPanel>
				</GroupBox>


				<!--  ! Empty Lines Compression Controls  -->
				<GroupBox Grid.Row="1" Width="370" Margin="0,10,0,0" Padding="5,5,0,0"
				          HorizontalAlignment="Left" BorderThickness="1.5" Header="Compress Empty Lines">

					<StackPanel Grid.Row="0" Margin="0,5,0,0">

						<!--  ! Enable/Disable Empty Line Compression  -->
						<ToggleButton x:Name="CompressEmptyLinesToggle" Height="20" HorizontalAlignment="Left"
						              IsChecked="{Binding CompressEmptyLines, Mode=TwoWay}"
						              Style="{StaticResource AnimatedSwitch}" />


						<!--  ! Empty Line Compression Rate  -->
						<StackPanel Margin="20,10" IsEnabled="{Binding ElementName=CompressEmptyLinesToggle, Path=IsChecked}" Orientation="Horizontal">
							<Slider x:Name="EmptyLineCompressionRateSlider" Width="240" Height="30"
							        IsSnapToTickEnabled="True" Maximum="95" Minimum="5"
							        TickFrequency="5" TickPlacement="Both"
							        Value="{Binding EmptyLineScale, Mode=TwoWay}" />

							<TextBlock Padding="5,2" VerticalAlignment="Center"
							           Style="{StaticResource DisabledTextBlock}"
							           TextAlignment="Center">

								<Run Text="{Binding Value, ElementName=EmptyLineCompressionRateSlider}" /><Run Text="% Smaller" />
							</TextBlock>

						</StackPanel>
					</StackPanel>
				</GroupBox>


				<!--  ! Custom Tokens Compression Controls  -->
				<GroupBox Grid.Row="2" Width="370" Margin="0,10,0,0"
				          Padding="5,5,0,0" HorizontalAlignment="Left" BorderThickness="1.5"
				          Header="Compress Lines With Specific Content">
					<StackPanel Grid.Row="1" Margin="0,5,0,0">

						<!--  ! Enable/Disable Custom Tokens Compression  -->
						<ToggleButton x:Name="CompressCustomTokensToggle" Height="20" HorizontalAlignment="Left"
						              IsChecked="{Binding CompressCustomTokens, Mode=TwoWay}"
						              Style="{StaticResource AnimatedSwitch}"
						              ToolTip="Customize what lines you want to compress." />


						<!--  ! Custom Tokens List  -->
						<StackPanel Width="265" Margin="20,5,0,10" HorizontalAlignment="Left"
						            IsEnabled="{Binding IsChecked, ElementName=CompressCustomTokensToggle}">

							<!--  ! New Token  -->
							<Label Content="Enter line content:" Foreground="#545353" />

							<Border Margin="0,0,0,4" BorderBrush="LightGray" BorderThickness="1">
								<Grid Height="30">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="50" />
									</Grid.ColumnDefinitions>


									<TextBox x:Name="NewTokenTextBox" Grid.Column="0" Padding="5,0"
									         VerticalContentAlignment="Center" BorderThickness="0" CommandManager.PreviewExecuted="NewTokenTextBox_PreviewExecuted"
									         ContextMenu="{x:Null}"
									         FontSize="15" FontWeight="SemiBold" MaxLength="27"
									         PreviewKeyDown="NewTokenTextBox_PreviewKeyDown" ToolTip="Insert your token here." />


									<Button x:Name="AddNewTokenButton" Grid.Column="1"
									        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.InsertTokenCommand}"
									        CommandParameter="{Binding ElementName=NewTokenTextBox, Path=Text}"
									        Content="{StaticResource AddButtonIcon}"
									        Cursor="Hand"
									        Style="{StaticResource AddButton}" />

								</Grid>
							</Border>

							<!--  ! Tokens List  -->
							<Border Background="White" BorderBrush="LightGray" BorderThickness="1">

								<ScrollViewer Height="100" VerticalScrollBarVisibility="Visible">

									<ItemsControl x:Name="CustomTokensList"
									              ItemTemplate="{StaticResource TokenListItemTemplate}"
									              ItemsSource="{Binding CustomTokens}"
									              ScrollViewer.VerticalScrollBarVisibility="Visible" />
								</ScrollViewer>
							</Border>
						</StackPanel>

						<!--  ! Custom Tokens Compression Scale  -->
						<StackPanel Margin="20,5,20,10" IsEnabled="{Binding IsChecked, ElementName=CompressCustomTokensToggle}" Orientation="Horizontal">
							<Slider x:Name="CustomTokensCompressionRateSlider" Width="240" Height="30"
							        IsSnapToTickEnabled="True" Maximum="95" Minimum="5"
							        TickFrequency="5" TickPlacement="Both"
							        Value="{Binding CustomTokensScale, Mode=TwoWay}" />

							<TextBlock Padding="5,2" VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}">
								<Run Text="{Binding Value, ElementName=CustomTokensCompressionRateSlider}" /><Run Text="% Smaller" />
							</TextBlock>
						</StackPanel>

					</StackPanel>
				</GroupBox>

			</StackPanel>
		</Grid>
	</ScrollViewer>

</UserControl>
